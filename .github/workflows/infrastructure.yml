name: Infrastructure Tests

on:
  push:
    branches: [main]
    paths:
      - "terraform/**"
      - ".github/workflows/infrastructure.yml"
  pull_request:
    branches: [main]
    paths:
      - "terraform/**"
      - ".github/workflows/infrastructure.yml"

env:
  TF_VERSION: "1.5.0"
  TG_VERSION: "0.55.1"

jobs:
  validate-terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Set up Terragrunt
        run: |
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: ./terraform
        run: |
          terraform init -backend=false
          terraform validate

      - name: Checkov Security Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./terraform
          framework: terraform
          output_format: cli
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: results.sarif

  test-terraform:
    name: Test Terraform Modules
    runs-on: ubuntu-latest
    needs: validate-terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Run Terratest
        working-directory: ./terraform/test
        run: |
          go mod download
          go test -v -timeout 30m -run TestTerraform

  plan-infrastructure:
    name: Plan Infrastructure Changes
    runs-on: ubuntu-latest
    needs: [validate-terraform, test-terraform]
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        environment: [dev, qa, uat]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Set up Terragrunt
        run: |
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Plan infrastructure changes
        working-directory: ./terraform/environments/${{ matrix.environment }}
        run: |
          terragrunt init
          terragrunt plan -out=tfplan
          terragrunt show tfplan

  cost-estimate:
    name: Infrastructure Cost Estimate
    runs-on: ubuntu-latest
    needs: validate-terraform
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Infracost
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh

      - name: Run Infracost
        working-directory: ./terraform
        run: |
          infracost breakdown --path . --format json --out-file infracost.json
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}

      - name: Post cost estimate comment
        uses: infracost/actions/comment@v3
        with:
          path: ./terraform/infracost.json
          behavior: update
          github-token: ${{ secrets.GITHUB_TOKEN }}
