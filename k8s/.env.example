# Magebase Environment Configuration
# Copy this file to .env and update with your actual values

# Docker Configuration
IMAGE_REGISTRY=your-registry.com
IMAGE_NAME=magebase
IMAGE_TAG=latest

# Domain Configuration
DOMAIN=magebase.dev

# Database Configuration
# NOTE: With CloudNativePG, the DATABASE_URL is automatically generated
# and stored in the 'magebase-db-creds' Kubernetes Secret.
# The application deployment references this Secret automatically.
# You do NOT need to provide DATABASE_URL manually.

# Application Secrets (base64 encoded)
# Generate base64 values using: echo -n "your-secret" | base64
SECRET_KEY_BASE_B64=your-base64-encoded-secret-key-base
RUBY_LLM_API_KEY_B64=your-base64-encoded-ruby-llm-api-key

# AWS SES Configuration (base64 encoded)
AWS_SES_ACCESS_KEY_ID_B64=your-base64-encoded-aws-access-key-id
AWS_SES_SECRET_ACCESS_KEY_B64=your-base64-encoded-aws-secret-access-key

# Hetzner Object Storage Configuration for Database Backups (base64 encoded)
HETZNER_OBJECT_STORAGE_ACCESS_KEY_B64=your-base64-encoded-hetzner-access-key-id
HETZNER_OBJECT_STORAGE_SECRET_KEY_B64=your-base64-encoded-hetzner-secret-access-key

# Additional Environment Variables
RAILS_ENV=production
RAILS_LOG_TO_STDOUT=true
RAILS_SERVE_STATIC_FILES=true

# Optional: External Services
# STRIPE_PUBLISHABLE_KEY=your-stripe-publishable-key
# STRIPE_SECRET_KEY=your-stripe-secret-key
# REDIS_URL=redis://magebase-redis-service:6379/0
